##### Nginx Caching Reverse Proxy #####


user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections 32000;
}

stream {
    ######## Set resolvers against DNS servers not used for local interception ########
    resolver 10.112.4.11 10.112.4.12;

    ######## Pass through SSL connections upstream ########
    server {
        listen                  443;
        proxy_buffer_size       16k;
        ssl_preread             on;
        proxy_pass              "${ssl_preread_server_name}:443";
    }
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$host" "$upstream_cache_status"';

    server_names_hash_max_size  1024;

    ######## Set resolvers against DNS servers not used for local interception ########
    resolver 10.112.4.11 10.112.4.12;

    proxy_cache_path /var/cache/nginx/wsus-cache keys_zone=wsus-cache:10m max_size=80g inactive=7d use_temp_path=off;

    access_log  /var/log/nginx/access.log main buffer=512;

    sendfile       on;
    tcp_nopush     on;

    #Timeouts
    keepalive_timeout 60;
    keepalive_requests 512;
    client_max_body_size 300M;
    client_body_buffer_size 10M;

    gzip  on;
    gzip_comp_level  2;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain application/x-javascript text/xml text/css application/xml;

    ############## Begin WSUS Cache ##############

    upstream wsus {
        server 10.112.8.30:8530;
        #server 113.29.212.33:8530;
    }

    server {
        listen       *:80;
        listen       *:8530;
        server_name  wsus.tsv.catholic.edu.au;
        ignore_invalid_headers      off;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache wsus-cache;
        proxy_cache_valid 200 14d;
        proxy_cache_lock on;

        # Immediately forward requests to the origin if we are filling the cache
        proxy_cache_lock_timeout 0s;

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_pass http://wsus/;
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header X-Real-IP $remote_addr;
        }
    }

    ############## End WSUS Cache ##############

    ############## Begin Apple Cache ##############

    server {
        listen       *:80;
        server_name  appldnld.apple.com iosapps.itunes.apple.com osxapps.itunes.apple.com;
        ignore_invalid_headers      off;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache wsus-cache;
        proxy_cache_valid 200 60d;
        proxy_cache_lock on;

        # Delay until cached
        proxy_cache_lock_timeout 600s;
        proxy_cache_key *.apple.com${uri};

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_pass http://${host};
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_ignore_headers Cache-Control;
        }
    }

    ############## End Apple Cache ##############

    ############## Begin Microsoft Cache ##############

    server {
        listen       *:80;
        server_name  *.windowsupdate.microsoft.com *.download.windowsupdate.com windowsupdate.microsoft.com download.windowsupdate.com;
        ignore_invalid_headers      off;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache wsus-cache;
        proxy_cache_valid 200 60d;
        proxy_cache_lock on;

        # Immediately forward requests to the origin if we are filling the cache
        proxy_cache_lock_timeout 0s;
        proxy_cache_key *.microsoft.com${uri};

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_pass http://${host};
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_ignore_headers Cache-Control;
        }
    }

    ############## End Microsoft Cache ############## 

    ############## Begin Google Cache ##############

    server {
        listen       *:80;
        server_name  dl.google.com;
        ignore_invalid_headers      off;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache wsus-cache;
        proxy_cache_valid 200 14d;
        proxy_cache_lock on;

        # Delay until cached
        proxy_cache_lock_timeout 600s;
        proxy_cache_key dl.google.com${uri};

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_pass http://${host};
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_ignore_headers Cache-Control;
        }
    }

    ############## End Google Cache ##############   
}