##### Nginx Caching Reverse Proxy v2.0 #####

user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections 32000;
}

stream {
    ######## Set resolvers against DNS servers not used for local interception ########
    resolver 10.112.4.11 10.112.4.12 ipv6=off;

    ######## Pass through SSL connections upstream ########
    server {
        listen                  443;
        proxy_buffer_size       16k;
        ssl_preread             on;
        proxy_pass              "${ssl_preread_server_name}:443";
    }
    log_format ssl '[SSL] $remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time "$ssl_preread_server_name"';
    access_log /var/log/nginx/access.log ssl buffer=512;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[HTTP] $remote_addr [$time_local] $status $request_method "$host$uri" "$http_user_agent" "CACHE=$upstream_cache_status"';

    ######## Set resolvers against DNS servers not used for local interception ########
    resolver 10.112.4.11 10.112.4.12 ipv6=off;

    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=cache:10m max_size=80g inactive=7d use_temp_path=off;

    access_log  /var/log/nginx/access.log main buffer=512;

    sendfile       on;
    tcp_nopush     on;

    #Timeouts
    keepalive_timeout 60;
    keepalive_requests 512;
    client_max_body_size 5G;
    client_body_buffer_size 10M;
    server_names_hash_max_size  1024;

    ######## Regexp for files larger than 5GB ########
    map $upstream_http_content_range $range_no_cache {
        default 1;
        "~^bytes .*/([1-9][0-9]{0,8}|[1-4][0-9]{9})$" 0;
    }

    ############## Begin WSUS Cache ##############

    upstream wsus {
        server 10.112.8.30:8530;
        #server 113.29.212.33:8530;
    }

    server {
        listen       80;
        listen       8530;
        server_name  wsus.tsv.catholic.edu.au;
        ignore_invalid_headers      off;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache cache;
        proxy_cache_valid 200 206 14d;
        proxy_cache_methods GET;
        proxy_cache_lock on;

        # Immediately forward requests to the origin if we are filling the cache
        proxy_cache_lock_timeout 600s;
        proxy_cache_key "$host$uri $slice_range";
        slice 16M;

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_http_version 1.1;
                proxy_pass http://wsus/;
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header Range     $slice_range;
        }
    }
    ############## End WSUS Cache ##############

    ############## Begin Microsoft Windows Update Cache ##############

    server {
        listen       80;
        ignore_invalid_headers      off;
        server_name     windowsupdate.microsoft.com download.windowsupdate.com *.windowsupdate.microsoft.com *.download.windowsupdate.com;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache cache;
        proxy_cache_valid 200 206 14d;
        proxy_cache_methods GET;
        proxy_cache_lock on;

        # Wait x seconds before sending file to client
        proxy_cache_lock_timeout 600s;

        # Redact the $host from Microsoft keys due to clustering (eg. Same file, different URL's, same paths)
        proxy_cache_key "$uri $slice_range";
        slice 16M;

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_http_version 1.1;
                proxy_pass http://${host};
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header Range     $slice_range;
                proxy_set_header Upgrade-Insecure-Requests "";
                proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie Vary;
                proxy_hide_header ETag;
        }
    }

    ############## End Microsoft Windows Update Cache ##############

    ############## Begin Microsoft Store Cache ##############

    server {
        listen       80;
        ignore_invalid_headers      off;
        server_name     tlu.dl.delivery.mp.microsoft.com *.tlu.dl.delivery.mp.microsoft.com;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache cache;
        proxy_cache_valid 200 206 14d;
        proxy_cache_methods GET;
        proxy_cache_lock on;

        # Wait x seconds before sending file to client
        proxy_cache_lock_timeout 600s;

        # Redact the $host from Microsoft keys due to clustering (eg. Same file, different URL's, same paths)
        proxy_cache_key "$uri $slice_range";
        slice 16M;

        # Set maximum size to not cache to prevent games from Microsoft Store filling the cache
        proxy_no_cache $range_no_cache;

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_http_version 1.1;
                proxy_pass http://${host};
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header Range     $slice_range;
                proxy_set_header Upgrade-Insecure-Requests "";
                proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie Vary;
                proxy_hide_header ETag;
        }
    }
    ############## End Microsoft Store Cache ##############

    ############## Begin Default Cache (Everything Else) ##############

    server {
        listen       80 default_server;
        ignore_invalid_headers      off;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;

        proxy_cache cache;
        proxy_cache_valid 200 206 14d;
        proxy_cache_methods GET;
        proxy_cache_lock on;

        # Wait x seconds before sending file to client
        proxy_cache_lock_timeout 600s;
        proxy_cache_key "$host$uri $slice_range";
        slice 16M;

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 600s;
        proxy_cache_use_stale updating;

        location / {
                proxy_http_version 1.1;
                proxy_pass http://${host};
                proxy_pass_request_headers      on;
                proxy_set_header Host      $host;
                proxy_set_header Range     $slice_range;
                proxy_set_header Upgrade-Insecure-Requests "";
                proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie Vary;
                proxy_hide_header ETag;
        }
    }
    ############## End Default Cache (Everything Else) ############## 
}