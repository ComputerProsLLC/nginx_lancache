##### Nginx Caching Reverse Proxy v2.3_amplify #####

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
        worker_connections 32000;
}

stream {
        # Set resolvers against DNS servers not used for local interception
        resolver 10.112.4.11 10.112.4.12 ipv6=off;

        # Pass through SSL connections upstream
        server {
                listen 443;
                proxy_buffer_size 16k;
                ssl_preread on;
                proxy_pass "${ssl_preread_server_name}:443";
        }
}

http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Extended logging for Nginx Amplify
        log_format  main_ext    '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for" '
                                '"$host" sn="$server_name" '
                                'rt=$request_time '
                                'ua="$upstream_addr" us="$upstream_status" '
                                'ut="$upstream_response_time" ul="$upstream_response_length" '
                                'cs=$upstream_cache_status' ;

        access_log /var/log/nginx/access.log main_ext;

        # Set resolvers against DNS servers not used for local interception
        resolver 10.112.4.11 10.112.4.12 ipv6=off;

        # Global cache paths and variables
        proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=cache:10m max_size=80g inactive=7d use_temp_path=off;

        # Miscellaneous tweaks
        sendfile on;
        tcp_nopush on;
        keepalive_timeout 60;
        keepalive_requests 512;
        client_max_body_size 20G;
        client_body_buffer_size 16M;
        server_names_hash_max_size 1024;

        # Map to get file size from content range header

        map $upstream_http_content_range $filesize {
                default -;
                "~^bytes .*/([0-9]*)$" $1;
        }

        # Default caching server configuration

        server {
                # Listen on port 80 and ignore_invalid_headers
                listen 80;
                ignore_invalid_headers off;

                proxy_cache cache;
                proxy_cache_valid 200 206 30d;

                #Only cache GET request methods
                proxy_cache_methods GET;

                # Slice downloads into 16MB pieces
                slice 16M;

                # Lock cache objects until the 16MB piece is retrieved
                proxy_cache_lock on;

                # Wait 600 seconds before sending file to client
                proxy_cache_lock_timeout 600s;
                proxy_cache_lock_age 600s;

                # Aggressive caching
                proxy_cache_key "$request_method|$uri|$slice_range";

                # Standard caching
                # proxy_cache_key "$request_method|$host$uri|$slice_range";

                proxy_cache_use_stale updating;

                location / {
                        proxy_http_version 1.1;
                        proxy_pass http://${host};
                        proxy_pass_request_headers on;
                        proxy_set_header Host $host;
                        proxy_set_header Range $slice_range;
                        proxy_set_header Upgrade-Insecure-Requests "";
                        proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie Vary;
                        proxy_hide_header ETag;
                }
        }
        server {
                # Add stub status for Nginx Amplify
                listen 127.0.0.1:80;
                server_name 127.0.0.1;
                location /nginx_status {
                        stub_status on;
                        allow 127.0.0.1;
                        deny all;
                }
        }
}